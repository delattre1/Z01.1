vendor_name = ModelSim
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/B-LogicaCombinacional/src/Mux2Way.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/TopLevel.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Register64.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Ram64.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Ram512.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Register16.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/PC.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/BinaryDigit.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Ram4K.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Register8.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/FlipFlopD.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Ram8.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/Register32.vhd
source_file = 1, /home/borg/intelFPGA/17.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/borg/intelFPGA/17.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/borg/intelFPGA/17.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/borg/intelFPGA/17.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/borg/Z01.1-Anonymous/Projetos/D-LogicaSequencial/src/db/Register32.cbx.xml
design_name = Register32
instance = comp, \output[0]~output , output[0]~output, Register32, 1
instance = comp, \output[1]~output , output[1]~output, Register32, 1
instance = comp, \output[2]~output , output[2]~output, Register32, 1
instance = comp, \output[3]~output , output[3]~output, Register32, 1
instance = comp, \output[4]~output , output[4]~output, Register32, 1
instance = comp, \output[5]~output , output[5]~output, Register32, 1
instance = comp, \output[6]~output , output[6]~output, Register32, 1
instance = comp, \output[7]~output , output[7]~output, Register32, 1
instance = comp, \output[8]~output , output[8]~output, Register32, 1
instance = comp, \output[9]~output , output[9]~output, Register32, 1
instance = comp, \output[10]~output , output[10]~output, Register32, 1
instance = comp, \output[11]~output , output[11]~output, Register32, 1
instance = comp, \output[12]~output , output[12]~output, Register32, 1
instance = comp, \output[13]~output , output[13]~output, Register32, 1
instance = comp, \output[14]~output , output[14]~output, Register32, 1
instance = comp, \output[15]~output , output[15]~output, Register32, 1
instance = comp, \output[16]~output , output[16]~output, Register32, 1
instance = comp, \output[17]~output , output[17]~output, Register32, 1
instance = comp, \output[18]~output , output[18]~output, Register32, 1
instance = comp, \output[19]~output , output[19]~output, Register32, 1
instance = comp, \output[20]~output , output[20]~output, Register32, 1
instance = comp, \output[21]~output , output[21]~output, Register32, 1
instance = comp, \output[22]~output , output[22]~output, Register32, 1
instance = comp, \output[23]~output , output[23]~output, Register32, 1
instance = comp, \output[24]~output , output[24]~output, Register32, 1
instance = comp, \output[25]~output , output[25]~output, Register32, 1
instance = comp, \output[26]~output , output[26]~output, Register32, 1
instance = comp, \output[27]~output , output[27]~output, Register32, 1
instance = comp, \output[28]~output , output[28]~output, Register32, 1
instance = comp, \output[29]~output , output[29]~output, Register32, 1
instance = comp, \output[30]~output , output[30]~output, Register32, 1
instance = comp, \output[31]~output , output[31]~output, Register32, 1
instance = comp, \clock~input , clock~input, Register32, 1
instance = comp, \clock~inputCLKENA0 , clock~inputCLKENA0, Register32, 1
instance = comp, \input[0]~input , input[0]~input, Register32, 1
instance = comp, \c2|u0|u0|c2|q~feeder , c2|u0|u0|c2|q~feeder, Register32, 1
instance = comp, \load~input , load~input, Register32, 1
instance = comp, \c2|u0|u0|c2|q , c2|u0|u0|c2|q, Register32, 1
instance = comp, \input[1]~input , input[1]~input, Register32, 1
instance = comp, \c2|u0|u1|c2|q~feeder , c2|u0|u1|c2|q~feeder, Register32, 1
instance = comp, \c2|u0|u1|c2|q , c2|u0|u1|c2|q, Register32, 1
instance = comp, \input[2]~input , input[2]~input, Register32, 1
instance = comp, \c2|u0|u2|c2|q~feeder , c2|u0|u2|c2|q~feeder, Register32, 1
instance = comp, \c2|u0|u2|c2|q , c2|u0|u2|c2|q, Register32, 1
instance = comp, \input[3]~input , input[3]~input, Register32, 1
instance = comp, \c2|u0|u3|c2|q~feeder , c2|u0|u3|c2|q~feeder, Register32, 1
instance = comp, \c2|u0|u3|c2|q , c2|u0|u3|c2|q, Register32, 1
instance = comp, \input[4]~input , input[4]~input, Register32, 1
instance = comp, \c2|u0|u4|c2|q~feeder , c2|u0|u4|c2|q~feeder, Register32, 1
instance = comp, \c2|u0|u4|c2|q , c2|u0|u4|c2|q, Register32, 1
instance = comp, \input[5]~input , input[5]~input, Register32, 1
instance = comp, \c2|u0|u5|c2|q , c2|u0|u5|c2|q, Register32, 1
instance = comp, \input[6]~input , input[6]~input, Register32, 1
instance = comp, \c2|u0|u6|c2|q , c2|u0|u6|c2|q, Register32, 1
instance = comp, \input[7]~input , input[7]~input, Register32, 1
instance = comp, \c2|u0|u7|c2|q~feeder , c2|u0|u7|c2|q~feeder, Register32, 1
instance = comp, \c2|u0|u7|c2|q , c2|u0|u7|c2|q, Register32, 1
instance = comp, \input[8]~input , input[8]~input, Register32, 1
instance = comp, \c2|u1|u0|c2|q~feeder , c2|u1|u0|c2|q~feeder, Register32, 1
instance = comp, \c2|u1|u0|c2|q , c2|u1|u0|c2|q, Register32, 1
instance = comp, \input[9]~input , input[9]~input, Register32, 1
instance = comp, \c2|u1|u1|c2|q~feeder , c2|u1|u1|c2|q~feeder, Register32, 1
instance = comp, \c2|u1|u1|c2|q , c2|u1|u1|c2|q, Register32, 1
instance = comp, \input[10]~input , input[10]~input, Register32, 1
instance = comp, \c2|u1|u2|c2|q~feeder , c2|u1|u2|c2|q~feeder, Register32, 1
instance = comp, \c2|u1|u2|c2|q , c2|u1|u2|c2|q, Register32, 1
instance = comp, \input[11]~input , input[11]~input, Register32, 1
instance = comp, \c2|u1|u3|c2|q , c2|u1|u3|c2|q, Register32, 1
instance = comp, \input[12]~input , input[12]~input, Register32, 1
instance = comp, \c2|u1|u4|c2|q , c2|u1|u4|c2|q, Register32, 1
instance = comp, \input[13]~input , input[13]~input, Register32, 1
instance = comp, \c2|u1|u5|c2|q~feeder , c2|u1|u5|c2|q~feeder, Register32, 1
instance = comp, \c2|u1|u5|c2|q , c2|u1|u5|c2|q, Register32, 1
instance = comp, \input[14]~input , input[14]~input, Register32, 1
instance = comp, \c2|u1|u6|c2|q , c2|u1|u6|c2|q, Register32, 1
instance = comp, \input[15]~input , input[15]~input, Register32, 1
instance = comp, \c2|u1|u7|c2|q~feeder , c2|u1|u7|c2|q~feeder, Register32, 1
instance = comp, \c2|u1|u7|c2|q , c2|u1|u7|c2|q, Register32, 1
instance = comp, \input[16]~input , input[16]~input, Register32, 1
instance = comp, \c1|u0|u0|c2|q~feeder , c1|u0|u0|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u0|c2|q , c1|u0|u0|c2|q, Register32, 1
instance = comp, \input[17]~input , input[17]~input, Register32, 1
instance = comp, \c1|u0|u1|c2|q~feeder , c1|u0|u1|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u1|c2|q , c1|u0|u1|c2|q, Register32, 1
instance = comp, \input[18]~input , input[18]~input, Register32, 1
instance = comp, \c1|u0|u2|c2|q~feeder , c1|u0|u2|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u2|c2|q , c1|u0|u2|c2|q, Register32, 1
instance = comp, \input[19]~input , input[19]~input, Register32, 1
instance = comp, \c1|u0|u3|c2|q~feeder , c1|u0|u3|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u3|c2|q , c1|u0|u3|c2|q, Register32, 1
instance = comp, \input[20]~input , input[20]~input, Register32, 1
instance = comp, \c1|u0|u4|c2|q~feeder , c1|u0|u4|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u4|c2|q , c1|u0|u4|c2|q, Register32, 1
instance = comp, \input[21]~input , input[21]~input, Register32, 1
instance = comp, \c1|u0|u5|c2|q , c1|u0|u5|c2|q, Register32, 1
instance = comp, \input[22]~input , input[22]~input, Register32, 1
instance = comp, \c1|u0|u6|c2|q , c1|u0|u6|c2|q, Register32, 1
instance = comp, \input[23]~input , input[23]~input, Register32, 1
instance = comp, \c1|u0|u7|c2|q~feeder , c1|u0|u7|c2|q~feeder, Register32, 1
instance = comp, \c1|u0|u7|c2|q , c1|u0|u7|c2|q, Register32, 1
instance = comp, \input[24]~input , input[24]~input, Register32, 1
instance = comp, \c1|u1|u0|c2|q , c1|u1|u0|c2|q, Register32, 1
instance = comp, \input[25]~input , input[25]~input, Register32, 1
instance = comp, \c1|u1|u1|c2|q~feeder , c1|u1|u1|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u1|c2|q , c1|u1|u1|c2|q, Register32, 1
instance = comp, \input[26]~input , input[26]~input, Register32, 1
instance = comp, \c1|u1|u2|c2|q~feeder , c1|u1|u2|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u2|c2|q , c1|u1|u2|c2|q, Register32, 1
instance = comp, \input[27]~input , input[27]~input, Register32, 1
instance = comp, \c1|u1|u3|c2|q~feeder , c1|u1|u3|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u3|c2|q , c1|u1|u3|c2|q, Register32, 1
instance = comp, \input[28]~input , input[28]~input, Register32, 1
instance = comp, \c1|u1|u4|c2|q~feeder , c1|u1|u4|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u4|c2|q , c1|u1|u4|c2|q, Register32, 1
instance = comp, \input[29]~input , input[29]~input, Register32, 1
instance = comp, \c1|u1|u5|c2|q~feeder , c1|u1|u5|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u5|c2|q , c1|u1|u5|c2|q, Register32, 1
instance = comp, \input[30]~input , input[30]~input, Register32, 1
instance = comp, \c1|u1|u6|c2|q~feeder , c1|u1|u6|c2|q~feeder, Register32, 1
instance = comp, \c1|u1|u6|c2|q , c1|u1|u6|c2|q, Register32, 1
instance = comp, \input[31]~input , input[31]~input, Register32, 1
instance = comp, \c1|u1|u7|c2|q , c1|u1|u7|c2|q, Register32, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, Register32, 1
